<h1>
struct Node{
  Node* links[2];
  bool containsKey(int bit)
  {
      return links[bit]!=NULL;
  }
  void put(int bit)
  {
      links[bit]=new Node();
  }
  Node* get(int bit)
  {
      return links[bit];
  }
};
class Trie{
  public:
    Node* root;
    Trie()
    {
        root=new Node();
    }
    void insert(int num)
    {
        Node* node=root;
        for(int i=31;i>=0;i--)
        {
            int bit=(num>>i)&1;
            if(!node->containsKey(bit))
            {
                node->put(bit);
            }
            node=node->get(bit);
        }
    }
    int max_xor(int num)
    {
        int maxi=0;
        Node*node=root;
        for(int i=31;i>=0;i--)
        {
             int bit=(num>>(i))&1;
            if(node->containsKey(1-bit))
            {
               maxi=maxi|(1<<i);
                node=node->get(1-bit);
            }
             else node=node->get(bit);
        }
       
        return maxi;
    }
};
<h1>
