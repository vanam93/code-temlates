//20UCS125 Vanam Gangi Reddy
#include<bits/stdc++.h>
struct Node
{
  Node* links[26];
  bool flag=false;
  bool containKey(char ch)
  {
      return links[ch-'a']!=NULL;
  }
  void put(char ch)
  {
      links[ch-'a']=new Node();
  }
  void setEnd()
  {
      flag=true;
  }
  bool isEnd()
  {
      return flag;
  }
  Node* get(char ch)
  {
      return links[ch-'a'];
  }
};
class Trie
{
  public:
    Node* root;
    Trie()
    {
        root=new Node();
    }
    void insert(string word)
    {
        Node* node=root;
        for(int i=0;i<word.size();i++)
        {
            if(!node->containsKey(word[i])) node->put(word[i]);
            node=node->get(word[i]);
        }
        node->setEnd();
    }
    bool search(string word)
    {
         Node* node=root;
        for(int i=0;i<word.size();i++)
        {
            if(!node->containsKey(word[i])) return false;
            node=node->get(word[i]);
        }
        return node->isEnd();
    }
};
